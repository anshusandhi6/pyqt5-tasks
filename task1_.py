# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cyborg_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import numpy as np
import cv2
import os
from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import QMainWindow,QApplication,QWidget,QPushButton,QHBoxLayout,QFileDialog,QMessageBox
location=" "
fname=" "
from PIL import Image
binary_val=0
binary_i_val=0
trunc_val=0
last=0
last_operation = " "
from PIL import Image
from matplotlib import cm  
from PIL.ImageQt import ImageQt


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(983, 731)
        self.convert = QtWidgets.QPushButton(Dialog)
        self.convert.setGeometry(QtCore.QRect(690, 640, 191, 71))
        self.convert.setObjectName("convert")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(100, 100, 321, 321))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.image_2 = QtWidgets.QLabel(Dialog)
        self.image_2.setGeometry(QtCore.QRect(600, 100, 321, 321))
        self.image_2.setScaledContents(True)
        self.image_2.setObjectName("image_2")
        self.horizontalSlider = QtWidgets.QSlider(Dialog)
        self.horizontalSlider.setGeometry(QtCore.QRect(130, 540, 160, 22))
        self.horizontalSlider.setMaximum(255)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalSlider_2 = QtWidgets.QSlider(Dialog)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(440, 540, 160, 22))
        self.horizontalSlider_2.setMaximum(255)
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setObjectName("horizontalSlider_2")
        self.horizontalSlider_3 = QtWidgets.QSlider(Dialog)
        self.horizontalSlider_3.setGeometry(QtCore.QRect(730, 540, 160, 22))
        self.horizontalSlider_3.setMaximum(255)
        self.horizontalSlider_3.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_3.setObjectName("horizontalSlider_3")
        self.first = QtWidgets.QLineEdit(Dialog)
        self.first.setGeometry(QtCore.QRect(130, 580, 113, 22))
        self.first.setObjectName("first")
        self.second = QtWidgets.QLineEdit(Dialog)
        self.second.setGeometry(QtCore.QRect(460, 580, 113, 22))
        self.second.setObjectName("second")
        self.third = QtWidgets.QLineEdit(Dialog)
        self.third.setGeometry(QtCore.QRect(730, 580, 113, 22))
        self.third.setObjectName("third")
        self.Binary = QtWidgets.QLineEdit(Dialog)
        self.Binary.setGeometry(QtCore.QRect(50, 540, 51, 22))
        self.Binary.setText("")
        self.Binary.setObjectName("Binary")
        self.Binary_inverse = QtWidgets.QLineEdit(Dialog)
        self.Binary_inverse.setGeometry(QtCore.QRect(380, 540, 41, 22))
        self.Binary_inverse.setText("")
        self.Binary_inverse.setObjectName("Binary_inverse")
        self.thresh_trunc = QtWidgets.QLineEdit(Dialog)
        self.thresh_trunc.setGeometry(QtCore.QRect(660, 540, 41, 22))
        self.thresh_trunc.setText("")
        self.thresh_trunc.setObjectName("thresh_trunc")
        self.upload = QtWidgets.QPushButton(Dialog)
        self.upload.setGeometry(QtCore.QRect(170, 640, 191, 71))
        self.upload.setObjectName("upload")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)


        self.upload.clicked.connect(self.openFileDialog)
        self.horizontalSlider.valueChanged.connect(self.openBinary)
        self.horizontalSlider_2.valueChanged.connect(self.openBinary_I)
        self.horizontalSlider_3.valueChanged.connect(self.openTrunc)
        self.convert.clicked.connect(self.browsefiles)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.convert.setText(_translate("Dialog", "Convert and Save"))
        self.label.setText(_translate("Dialog", "                            Image 1"))
        self.image_2.setText(_translate("Dialog", "                              Image 2"))
        self.first.setText(_translate("Dialog", "       Binary"))
        self.second.setText(_translate("Dialog", "   Binary_inverse"))
        self.third.setText(_translate("Dialog", "thresh_trunc"))
        self.upload.setText(_translate("Dialog", "Upload"))


    def openFileDialog(self):
        global location
        option=QFileDialog.Options()
        widget=QWidget()
        file=QFileDialog.getOpenFileName(widget,"Open Single File","Default File", 'Images (*.png, *.xmp *.jpg)',options=option)
        self.label.setPixmap(QtGui.QPixmap(file[0]))
        location=file[0]
        
        
        



    def openBinary(self):
        global binary_val
        global last
        global last_operation
        binary_val = self.horizontalSlider.value()
        self.Binary.setText(str(binary_val))
        originalImage = cv2.imread(location,0)
        _,thresh1 = cv2.threshold(originalImage,binary_val,255,cv2.THRESH_BINARY)
        im = Image.fromarray(np.uint8(cm.gist_earth(thresh1)*255))
        qim = ImageQt(im)
        last = binary_val
        last_operation = "Binary"
        
        self.image_2.setPixmap(QtGui.QPixmap.fromImage(qim))
        


    def openBinary_I(self):
        global binary_i_val
        global last
        global last_operation
        binary_i_val = self.horizontalSlider_2.value()
        self.Binary_inverse.setText(str(binary_i_val))
        originalImage = cv2.imread(location,0)
        _,thresh1 = cv2.threshold(originalImage,binary_i_val,255,cv2.THRESH_BINARY_INV)
        im = Image.fromarray(np.uint8(cm.gist_earth(thresh1)*255))
        
        qim = ImageQt(im)
        last = binary_i_val
        last_operation = "Binary_I"
        
        self.image_2.setPixmap(QtGui.QPixmap.fromImage(qim))
        


    def openTrunc(self):
        global trunc_val
        global last
        global last_operation
        trunc_val = self.horizontalSlider_3.value()
        self.thresh_trunc.setText(str(trunc_val))
        originalImage = cv2.imread(location,0)
        _,thresh1 = cv2.threshold(originalImage,trunc_val,255,cv2.THRESH_TRUNC)
        im = Image.fromarray(np.uint8(cm.gist_earth(thresh1)*255))
        
        qim = ImageQt(im)
        last = trunc_val
        last_operation = "Trunc"
        
        
        self.image_2.setPixmap(QtGui.QPixmap.fromImage(qim))


    def browsefiles(self):
        global fname
        option=QFileDialog.Options()
        widget=QWidget()
        fname= QFileDialog.getExistingDirectory(widget,"Select Directory")
        
        
        
        if len(fname)==0:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Enter a valid location")
            msg.setIcon(QMessageBox.Warning)
            x=msg.exec_()

        else:
            if len(last_operation)==0:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("No operations found")
                msg.setIcon(QMessageBox.Warning)
                x=msg.exec_()
            else :
                if last_operation == "Binary":
                    originalImage = cv2.imread(location,0)
                    _,thresh1 = cv2.threshold(originalImage,last,255,cv2.THRESH_BINARY)
                    cv2.imwrite(fname+"/op.jpg",thresh1)

                elif last_operation == "Binary_I" :
                    originalImage = cv2.imread(location,0)
                    _,thresh1 = cv2.threshold(originalImage,last,255,cv2.THRESH_BINARY_INV)
                    cv2.imwrite(fname+"/op.jpg",thresh1)

                else :
                    originalImage = cv2.imread(location,0)
                    _,thresh1 = cv2.threshold(originalImage,binary_val,255,cv2.THRESH_TRUNC)
                    cv2.imwrite(fname+"/op.jpg",thresh1)


               

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
